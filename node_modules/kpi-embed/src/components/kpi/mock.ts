import type { KpiPayload } from "./types";
import { buildPowerFromIsOn } from "./energy";

const now = new Date();
const baseDate = new Date(now);
baseDate.setDate(baseDate.getDate() - 7); // últimos 7 días

// genera timestamps horarios
const timestamps = Array.from({ length: 7*24 }).map((_, i) => {
  const d = new Date(baseDate.getTime() + i * 3600_000);
  return d.toISOString();
});

function randomSeries(len: number, min: number, max: number) {
  return Array.from({ length: len }).map(() =>
    min + Math.round(Math.random() * (max - min))
  );
}

export const mock: KpiPayload = {
  generated_at: now.toISOString(),
  org: { id: 1, name: "Demo Org" },
  kpis: {
    assets_total: 6,
    tanks: 3,
    pumps: 3,
    valves: 0,
    manifolds: 0,
    alarms_active: 2,
    alarms_critical_active: 1,
    avg_flow_lpm_30d: 150,
    avg_level_pct_30d: 65,
  },
  locations: [
    { location_id: 1, location_code: "LOC-1", location_name: "Planta Norte" },
    { location_id: 2, location_code: "LOC-2", location_name: "Planta Sur" },
  ],
  byLocation: [
    {
      location_id: 1,
      location_code: "LOC-1",
      location_name: "Planta Norte",
      assets_total: 3,
      tanks_count: 2,
      pumps_count: 1,
      valves_count: 0,
      manifolds_count: 0,
      alarms_active: 1,
      alarms_critical_active: 0,
      pump_readings_30d: 120,
      avg_flow_lpm_30d: 100,
      avg_pressure_bar_30d: 2.5,
      pumps_last_seen: now.toISOString(),
      tank_readings_30d: 120,
      avg_level_pct_30d: 60,
      tanks_last_seen: now.toISOString(),
    },
    {
      location_id: 2,
      location_code: "LOC-2",
      location_name: "Planta Sur",
      assets_total: 3,
      tanks_count: 1,
      pumps_count: 2,
      valves_count: 0,
      manifolds_count: 0,
      alarms_active: 1,
      alarms_critical_active: 1,
      pump_readings_30d: 120,
      avg_flow_lpm_30d: 200,
      avg_pressure_bar_30d: 3.0,
      pumps_last_seen: now.toISOString(),
      tank_readings_30d: 120,
      avg_level_pct_30d: 70,
      tanks_last_seen: now.toISOString(),
    },
  ],
  assets: {
    tanks: [
      { id: 1, name: "Tanque Norte 1", capacity_liters: 50000, location_id: 1, fluid: "Agua" },
      { id: 2, name: "Tanque Norte 2", capacity_liters: 30000, location_id: 1, fluid: "Agua" },
      { id: 3, name: "Tanque Sur", capacity_liters: 40000, location_id: 2, fluid: "Agua" },
    ],
    pumps: [
      { id: 101, name: "Bomba Norte A", rated_kw: 7.5, drive_type: "vfd", location_id: 1, group_id: 1 },
      { id: 201, name: "Bomba Sur A", rated_kw: 5.5, drive_type: "direct", location_id: 2, group_id: 1 },
      { id: 202, name: "Bomba Sur B", rated_kw: 5.5, drive_type: "direct", location_id: 2, group_id: 1 },
    ],
    valves: [],
    manifolds: [],
  },
  latest: {
    tanks: [
      { tank_id: 1, ts: now.toISOString(), level_percent: 62, volume_l: 31000, temperature_c: 18 },
      { tank_id: 2, ts: now.toISOString(), level_percent: 70, volume_l: 21000, temperature_c: 19 },
      { tank_id: 3, ts: now.toISOString(), level_percent: 55, volume_l: 22000, temperature_c: 17 },
    ],
    pumps: [
      { pump_id: 101, ts: now.toISOString(), is_on: true, flow_lpm: 90, pressure_bar: 2.6, voltage_v: 380, current_a: 12, control_mode: "auto", manual_lockout: false },
      { pump_id: 201, ts: now.toISOString(), is_on: false, flow_lpm: 0, pressure_bar: 0, voltage_v: 0, current_a: 0, control_mode: "manual", manual_lockout: false },
      { pump_id: 202, ts: now.toISOString(), is_on: true, flow_lpm: 100, pressure_bar: 3.1, voltage_v: 380, current_a: 14, control_mode: "auto", manual_lockout: false },
    ],
  },
  timeseries: {
    tanks: {
      "1": {
        timestamps,
        level_percent: randomSeries(timestamps.length, 50, 70),
        volume_l: randomSeries(timestamps.length, 28000, 32000),
        temperature_c: randomSeries(timestamps.length, 16, 20),
      },
      "2": {
        timestamps,
        level_percent: randomSeries(timestamps.length, 60, 80),
        volume_l: randomSeries(timestamps.length, 20000, 25000),
        temperature_c: randomSeries(timestamps.length, 16, 21),
      },
      "3": {
        timestamps,
        level_percent: randomSeries(timestamps.length, 40, 65),
        volume_l: randomSeries(timestamps.length, 20000, 25000),
        temperature_c: randomSeries(timestamps.length, 15, 19),
      },
    },
    pumps: {
      "101": {
        timestamps,
        is_on: Array.from({ length: timestamps.length }).map((_, i) => (i % 8) < 4),
      },
      "201": {
        timestamps,
        is_on: Array.from({ length: timestamps.length }).map((_, i) => (i % 12) < 2),
      },
      "202": {
        timestamps,
        is_on: Array.from({ length: timestamps.length }).map((_, i) => (i % 6) < 3),
      },
    },
  },
  analytics30d: {
    pump_uptime: {
      "101": { pump_id: 101, pump_name: "Bomba Norte A", on_seconds: 300*3600, total_seconds: 720*3600, uptime_pct_30d: 40 },
      "201": { pump_id: 201, pump_name: "Bomba Sur A", on_seconds: 100*3600, total_seconds: 720*3600, uptime_pct_30d: 14 },
      "202": { pump_id: 202, pump_name: "Bomba Sur B", on_seconds: 400*3600, total_seconds: 720*3600, uptime_pct_30d: 55 },
    },
    pump_energy_kwh: {
      "101": { pump_id: 101, kwh_30d: 120 },
      "201": { pump_id: 201, kwh_30d: 40 },
      "202": { pump_id: 202, kwh_30d: 150 },
    },
  },
  topology: { edges: [], nodes: [] },
  alarms: [
    { id: 1, severity: "critical", message: "Tanque Sur nivel bajo", ts: now.toISOString() },
    { id: 2, severity: "warning", message: "Bomba Norte A consumo alto", ts: now.toISOString() },
  ],
};

buildPowerFromIsOn(mock);
export default mock;
